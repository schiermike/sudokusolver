package test;


import junit.framework.Assert;

import org.junit.Before;
import org.junit.Test;

import sudoku.Sudoku;
import sudoku.SudokuSolver;
import sudoku.simplification.BoxInteraction;
import sudoku.simplification.FindSingles;
import sudoku.simplification.NakedTuples;
import sudoku.simplification.SolvedCellSimplifiesUnits;

public class TestNakedTuples 
{
	private SudokuSolver solver;

	@Before
	public void setUp() throws Exception 
	{
		solver = new SudokuSolver(new Sudoku());
		solver.useSimplifier(new SolvedCellSimplifiesUnits());
		solver.useSimplifier(new FindSingles());
	}
	
	@Test
	public void interativeTest()
	{
		solver.clearSimplifiers();
		solver.getSudoku().set(".94...13..............76..2.8..1.....32.........2...6.....5.4.......8..7..63.4..8");
		solver.solve();
		Assert.assertEquals("{123456789}94{123456789}{123456789}{123456789}13{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}76{123456789}{123456789}2{123456789}8{123456789}{123456789}1{123456789}{123456789}{123456789}{123456789}{123456789}32{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}2{123456789}{123456789}{123456789}6{123456789}{123456789}{123456789}{123456789}{123456789}5{123456789}4{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}{123456789}8{123456789}{123456789}7{123456789}{123456789}63{123456789}4{123456789}{123456789}8", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new SolvedCellSimplifiesUnits());
		solver.solve();
		Assert.assertEquals("{25678}94{58}{28}{25}13{56}{1235678}{12567}{13578}{14589}{23489}{12359}{56789}{45789}{4569}{1358}{15}{1358}{14589}76{589}{4589}2{45679}8{579}{45679}1{3579}{23579}{24579}{3459}{145679}32{456789}{4689}{579}{5789}{145789}{1459}{14579}{1457}{1579}2{3489}{3579}{35789}6{13459}{123789}{127}{13789}{1679}5{1279}4{129}{1369}{123459}{1245}{1359}{169}{269}8{23569}{1259}7{12579}{1257}63{29}4{259}{1259}8", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new FindSingles());
		solver.solve();
		Assert.assertEquals("79458213626{58}{49}31{579}{45789}{59}{1358}{15}{1358}{49}76{59}{4589}268{59}71{59}32443286{59}{579}{1579}{159}{159}{15}724386{159}{189}2{189}6574{19}3{359}4{359}1286{59}7{15}763942{15}8", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new NakedTuples());
		solver.solve();
		Assert.assertEquals("79458213626{58}{49}317{48}{59}{1358}{15}{1358}{49}76{59}{48}268{59}71{59}32443286{59}{59}71{159}{15}724386{59}{189}2{189}6574{19}3{359}4{359}1286{59}7{15}763942{15}8", 
				solver.getSudoku().toString(true));
		
	}
	
	@Test
	public void test2()
	{
		solver.getSudoku().set(".8...4.6...2.....976.....12...8.6...8.......3...1.7...67...5.411.....7...5.9...2.");
		solver.solve();
		Assert.assertEquals("{359}8{1359}{2357}{1235}4{35}6{57}{345}{134}2{3567}{13568}{38}{3458}{3578}976{345}{35}{358}9{3458}12{23459}{1349}{134579}8{3459}6{12459}{579}{457}8{149}{145679}{45}{459}2{14569}{579}3{23459}{349}{34569}1{3459}7{245689}{589}{4568}67{389}{23}{238}5{389}4112{3489}{346}{3468}{38}7{3589}{568}{34}5{348}971{368}2{68}", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new NakedTuples());
		solver.solve();
		Assert.assertEquals("{359}8{1359}{27}{12}4{35}6{57}{345}{134}2{67}{16}{38}{3458}{3578}976{345}{35}{358}9{3458}12{23459}{1349}{134579}8{3459}6{12459}{579}{457}8{149}{145679}{45}{459}2{14569}{579}3{23459}{349}{34569}1{3459}7{245689}{589}{4568}67{389}{23}{238}5{389}4112{389}{46}{46}{38}7{3589}{58}{34}5{348}971{368}2{68}", 
				solver.getSudoku().toString(true));
	}
	
	@Test
	public void testWithBoxInteraction()
	{
		solver.getSudoku().set(".6.8.9.1.42..1..8.1.......23.7...2.....4.5.....4...5.62.......9.8..7..21.4.2.3.6.");
		solver.solve();
		Assert.assertEquals("{57}6{35}829{347}1{3457}429{35}1768{35}1{37}8{356}{3456}{46}9{3457}2357{169}{689}{168}2{49}{48}6924{38}51{37}{378}8147{39}25{39}62{37}{356}{156}{4568}{1468}{3478}{3457}9{59}8{356}{569}7{46}{34}21{579}412{589}3{78}6{578}", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new NakedTuples());
		solver.solve();
		Assert.assertEquals("{57}6{35}829{347}1{3457}429{35}1768{35}1{37}8{356}{3456}{46}9{3457}2357{169}{689}{18}2{49}{48}6924{38}51{37}{378}8147{39}25{39}62{37}{356}{156}{4568}{18}{3478}{3457}9{59}8{356}{569}7{46}{34}21{579}412{589}3{78}6{578}", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new BoxInteraction());
		solver.solve();
		Assert.assertEquals("{57}6{35}829{347}1{347}429{35}1768{35}1{37}8{356}{456}{46}9{357}2357{169}{689}{18}2{49}{48}6924{38}51{37}{378}8147{39}25{39}62{37}{356}{156}{4568}{18}{3478}{3457}9{59}8{356}{569}7{46}{34}21{579}412{589}3{78}6{57}", 
				solver.getSudoku().toString(true));
	}
	
	@Test
	public void test4()
	{
		solver.getSudoku().set("7.......3..34.69...4.58....2.7.....6.6.....8.4.....2.9....17.2...19.57..6.......1");
		solver.solve();
		Assert.assertEquals("7{12589}{25689}{12}{29}{129}{14568}{1456}3{158}{1258}34769{15}{258}{19}4{269}583{16}{167}{27}2{13589}7{138}{3459}{1489}{1345}{1345}6{1359}6{59}{1237}{23459}{1249}{1345}8{457}4{1358}{58}{13678}{356}{18}2{1357}9{3589}{3589}{4589}{368}17{34568}2{458}{38}{238}19{2346}57{346}{48}67{2458}{238}{234}{248}{3458}91", 
				solver.getSudoku().toString(true));
		
		solver.useSimplifier(new NakedTuples());
		solver.solve();
		Assert.assertEquals("7{58}{568}{12}{29}{129}{4568}{456}3{158}{1258}34769{15}{258}{19}4{269}583{16}{167}{27}2{13589}7{138}{3459}{1489}{1345}{1345}6{1359}6{59}{1237}{23459}{1249}{1345}8{457}4{1358}{58}{13678}{356}{18}2{1357}9{3589}{3589}{4589}{368}17{34568}2{458}{38}{238}19{2346}57{346}{48}67{2458}{238}{234}{248}{3458}91", 
				solver.getSudoku().toString(true));
	}
}
