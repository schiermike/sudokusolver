package test;


import junit.framework.Assert;

import org.junit.Before;
import org.junit.Test;

import sudoku.Sudoku;
import sudoku.SudokuSolver;
import sudoku.simplification.SolvedCellSimplifiesUnits;

public class TestSolvedCellSimplifiesUnits 
{
	private SudokuSolver solver;

	@Before
	public void setUp() throws Exception 
	{
		solver = new SudokuSolver(new Sudoku());
		solver.useSimplifier(new SolvedCellSimplifiesUnits());
	}
	
	@Test
	public void test1()
	{
		solver.getSudoku().set(".94...13..............76..2.8..1.....32.........2...6.....5.4.......8..7..63.4..8");
		solver.solve();
		Assert.assertEquals("{25678}94{58}{28}{25}13{56}{1235678}{12567}{13578}{14589}{23489}{12359}{56789}{45789}{4569}{1358}{15}{1358}{14589}76{589}{4589}2{45679}8{579}{45679}1{3579}{23579}{24579}{3459}{145679}32{456789}{4689}{579}{5789}{145789}{1459}{14579}{1457}{1579}2{3489}{3579}{35789}6{13459}{123789}{127}{13789}{1679}5{1279}4{129}{1369}{123459}{1245}{1359}{169}{269}8{23569}{1259}7{12579}{1257}63{29}4{259}{1259}8", 
				solver.getSudoku().toString(true));
	}
	
	@Test
	public void test2()
	{
		solver.getSudoku().set("4...187..8.......2.....4..............6.53..1..726.43...1.7...6.3...1.8....6.....");
		solver.solve();
		Assert.assertEquals("4{2569}{2359}{359}187{569}{359}8{15679}{359}{3579}{39}{56}{13569}{14569}2{1235679}{125679}{2359}{3579}{239}4{135689}{1569}{3589}{12359}{124589}{234589}{148}{48}7{25689}{2569}{589}{29}{2489}6{48}53{289}{279}1{15}{158}726943{58}{259}{24589}1{34589}7{25}{2359}{2459}6{25679}3{2459}{459}{249}1{259}8{4579}{2579}{245789}{24589}6{23489}{25}{12359}{124579}{34579}", 
				solver.getSudoku().toString(true));
	}
	
	@Test
	public void test3()
	{
		solver.getSudoku().set("35.6.......7.......9..3.18......5....6..1..9....4......18.9..6.......5.......7.32");
		solver.solve();
		Assert.assertEquals("35{124}6{2478}{12489}{2479}{247}{479}{12468}{28}7{12589}{2458}{12489}{23469}{245}{34569}{246}9{246}{257}3{24}18{4567}{124789}{2378}{12349}{23789}{2678}5{234678}{1247}{134678}{24578}6{2345}{2378}1{238}{23478}9{34578}{125789}{2378}{12359}4{2678}{23689}{23678}{1257}{135678}{257}18{235}9{234}{47}6{47}{2679}{237}{2369}{1238}{2468}{123468}5{147}{14789}{569}4{569}{158}{568}7{89}32", 
				solver.getSudoku().toString(true));
	}
}
